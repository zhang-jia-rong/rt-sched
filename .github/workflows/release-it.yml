name: Release It!

permissions:
  contents: write
  packages: write
  pull-requests: write

on:
  push:
    branches:
      - release/[1-9][0-9]*.[1-9][0-9]*
  workflow_dispatch:
    inputs:
      release-branch-calver:
        description: Release branch calver in YYYY.MM format (e.g. 2024.3)
        required: false
        type: string

env:
  HUSKY: 0
  # Simplified validation without length()
  RELEASE_BRANCH: ${{ github.event.inputs.release-branch-calver &&
    contains(github.event.inputs.release-branch-calver, '.') &&
    startsWith(github.event.inputs.release-branch-calver, '20') &&
    github.event.inputs.release-branch-calver || '' }}
  REF_NAME: ${{ github.ref_name }}
  EVENT_NAME: ${{ github.event_name }}

jobs:
  validate-input:
    runs-on: ubuntu-latest
    steps:
      - name: Validate release branch format
        env:
          CALVER_INPUT: ${{ github.event.inputs.release-branch-calver }}
        run: | # shell
          if [ ! -z "$CALVER_INPUT" ]; then
            if ! [[ "$CALVER_INPUT" =~ ^20[0-9]{2}\.(0[1-9]|1[0-2])$ ]]; then
              echo "Invalid release branch format. Must be YYYY.MM"
              exit 1
            fi
          fi

  clean-install:
    needs: validate-input
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: | # shell
          npm ci

  release-it:
    needs: clean-install
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: | # shell
          git config user.name "Zhang Jia Rong"
          git config user.email zhang-jia-rong@outlook.com
      - env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        run: | # shell
          echo -n "$GPG_PRIVATE_KEY" | base64 --decode | gpg --import
      - env:
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
        run: | # shell
          git config user.signingkey "$GPG_KEY_ID"

      # Handle develop branch releases
      - if: ${{ env.EVENT_NAME == 'workflow_dispatch' && env.REF_NAME == 'develop' && env.RELEASE_BRANCH == '' }}
        run: | # shell
          BRANCH_NAME="release/$(date +'%Y.%-m')"
          git checkout -b "$BRANCH_NAME"

      - if: ${{ env.EVENT_NAME == 'workflow_dispatch' && env.REF_NAME == 'develop' && env.RELEASE_BRANCH != '' }}
        env:
          RELEASE_BRANCH_NAME: ${{ env.RELEASE_BRANCH }}
        run: | # shell
          git checkout "release/$RELEASE_BRANCH_NAME"
          git merge --ff-only develop

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org
      - run: | # shell
          npm ci

      # Release commands using env vars
      - if: ${{ env.EVENT_NAME == 'workflow_dispatch' && env.REF_NAME == 'develop' && env.RELEASE_BRANCH == '' }}
        run: | # shell
          npm run release -- --ci --no-git.requireUpstream --github.preRelease --plugins.@csmith/release-it-calver-plugin.increment=calendar.rc

      - if: ${{ env.EVENT_NAME == 'workflow_dispatch' && env.REF_NAME == 'develop' && env.RELEASE_BRANCH != '' }}
        run: | # shell
          npm run release -- --ci --no-git.requireUpstream --github.preRelease --plugins.@csmith/release-it-calver-plugin.increment=minor.rc

      - if: ${{ env.EVENT_NAME == 'push' && startsWith(env.REF_NAME, 'release/') }}
        run: | # shell
          npm run release -- --ci --github.preRelease --plugins.@csmith/release-it-calver-plugin.increment=rc

      - if: ${{ env.EVENT_NAME == 'workflow_dispatch' && startsWith(env.REF_NAME, 'release/') }}
        run: | # shell
          npm run release -- --ci --no-git.requireCommits --plugins.@csmith/release-it-calver-plugin.increment=minor
